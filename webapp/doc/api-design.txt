Database Design:

users
_________
user_id
username
hashed_password


watchlist
_________
users_id 
anime_id


animes
________
id
picture
name
# episodes
genre
mal_rating


reviews
________
review_id
review_text
anime_id


user_reviews_link
________
user_id
review_id


our_ratings:
_________
rating_id
anime_id
rating_score


user_ratings_link
__________
user_id
rating_id



ENDPOINTS:

GET requests
each anime’s main info page
REQUEST:  /anime/{anime_title}
RESPONSE: JSON containing a bunch of information about that anime: # episodes, genre, etc.

Picture -- (blob) the picture of the anime
Episodes -- (integer) the number of episodes for the anime.
Genre -- (string) the genre of the anime
MAL_rating -- (integer) the MAL rating for the anime
Our_rating -- (integer) the rating of the anime on our site as rated by our users
Episodes -- (int) the number of episodes for the anime


list of animes by genre
REQUEST: /anime

OPTIONAL GET PARAMETERS:
* genre (Optional, default='no genre') -- gets all animes that fit into the given genre

RESPONSE: JSON list of dictionaries, each representing an anime. Each dictionary will contain the following fields: 

	Picture -- (blob) the picture of the anime
	Name -- (string) the name of the anime
	Rating -- (int) the MAL rating for the anime 
	Episodes -- (int) the number of episodes for the anime


get user’s anime watchlist
REQUEST: /watchlist/user_name

RESPONSE: JSON list of dictionaries containing the animes inside of it, with each anime containing the following fields:

	Picture -- (blob) the picture of the anime
	Name -- (string) the name of the anime
	Rating -- (int) the MAL rating for the anime 
	Episodes -- (int) the number of episodes for the anime
	Genre -- (string) the name of the genre


anime recommendations
REQUEST: /recommendations/user_name


RESPONSE: JSON list of dictionaries containing the animes inside of it, with each anime with the following fields:
	
	Picture -- (blob) the picture of the anime
	Name -- (string) the name of the anime
	Rating -- (int) the MAL rating for the anime 
	Episodes -- (int) the number of episodes for the anime
	Genre -- (string) the name of the genre


searching for anime
REQUEST: /search/{search string}

RESPONSE: JSON list of dictionaries containing anime dictionaries, with each dictionary containing the following fields:

	Picture -- (blob) the picture of the anime
	Name -- (string) the name of the anime
	Episodes -- (int) the number of episodes for the anime




